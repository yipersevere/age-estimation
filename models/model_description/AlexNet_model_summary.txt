print(self.alexnet)
===============================================================================
AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classifier): Sequential(
    (0): Dropout(p=0.5)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace)
    (3): Dropout(p=0.5)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)


===============================================================================================
summary(alexmodel, (3,224,224))
summary(model, (3, 224, 224))
None
/media/yi/harddrive/codes/MultitaskLearningFace/models/MTL_AlexNet_model.py:109: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  gen_pred = F.softmax(self.gen_cls_pred(gen_pred))
/media/yi/harddrive/codes/MultitaskLearningFace/models/MTL_AlexNet_model.py:112: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  emo_pred = F.softmax(self.emo_cls_pred(emo_pred))
/media/yi/harddrive/codes/MultitaskLearningFace/models/MTL_AlexNet_model.py:115: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  smile_pred   = F.softmax(self.smile_cls_pred(smile_pred))
from torchsummary import summary
null
summary(model, (3, 224, 224))
None
/media/yi/harddrive/codes/MultitaskLearningFace/models/MTL_AlexNet_model.py:109: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  gen_pred = F.softmax(self.gen_cls_pred(gen_pred))
/media/yi/harddrive/codes/MultitaskLearningFace/models/MTL_AlexNet_model.py:112: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  emo_pred = F.softmax(self.emo_cls_pred(emo_pred))
/media/yi/harddrive/codes/MultitaskLearningFace/models/MTL_AlexNet_model.py:115: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.
  smile_pred   = F.softmax(self.smile_cls_pred(smile_pred))
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1           [-1, 64, 55, 55]          23,296
              ReLU-2           [-1, 64, 55, 55]               0
         MaxPool2d-3           [-1, 64, 27, 27]               0
            Conv2d-4          [-1, 192, 27, 27]         307,392
              ReLU-5          [-1, 192, 27, 27]               0
         MaxPool2d-6          [-1, 192, 13, 13]               0
            Conv2d-7          [-1, 384, 13, 13]         663,936
              ReLU-8          [-1, 384, 13, 13]               0
            Conv2d-9          [-1, 256, 13, 13]         884,992
             ReLU-10          [-1, 256, 13, 13]               0
           Conv2d-11          [-1, 256, 13, 13]         590,080
             ReLU-12          [-1, 256, 13, 13]               0
        MaxPool2d-13            [-1, 256, 6, 6]               0
           Linear-14                  [-1, 512]       4,719,104
          Dropout-15                  [-1, 512]               0
           Linear-16                  [-1, 100]          51,300
           Linear-17                  [-1, 512]       4,719,104
          Dropout-18                  [-1, 512]               0
           Linear-19                    [-1, 2]           1,026
           Linear-20                  [-1, 512]       4,719,104
          Dropout-21                  [-1, 512]               0
           Linear-22                    [-1, 7]           3,591
           Linear-23                  [-1, 512]       4,719,104
          Dropout-24                  [-1, 512]               0
           Linear-25                    [-1, 2]           1,026
================================================================
Total params: 21,403,055
Trainable params: 21,403,055
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.57
Forward/backward pass size (MB): 8.11
Params size (MB): 81.65
Estimated Total Size (MB): 90.33
----------------------------------------------------------------



Multitask learning Face
[01.04.2019 14:42:31] [Age, Gender, Emotion] load: start ...
[01.04.2019 14:42:31] Namespace(batch_size=4, dataset='CVPR_16_ChaLearn', epochs=1, folder_sub_name='_age_gender_emotion_smile_0_0_0_1', load_pretrained_model=True, loading_jobs=4, log_dir=None, lr_rate=0.01, lr_schedule=5, model='MTL_AlexNet_model', multitask_training_type=2, multitask_weight_type=4, num_workers=4, train_type=4, verify_images=None, weight_decay=1e-06, weights=[1, 1, 1])
[FER2013 dataset] load: finished !

    from torchsummary import summary
    summary(self.alexnet, (3, 224, 224))
SyntaxError('invalid syntax', ('<string>', 1, 4, 'from torchsummary import summary\n'))
    from torchsummary import summary
SyntaxError('invalid syntax', ('<string>', 1, 4, 'from torchsummary import summary'))
from torchsummary import summary
null
summary(self.alexnet, (3, 224, 224))
RuntimeError('Input type (torch.cuda.FloatTensor) and weight type (torch.FloatTensor) should be the same',)
summary(self.alexnet.cuda(), (3, 224, 224))
None
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv2d-1           [-1, 64, 55, 55]          23,296
              ReLU-2           [-1, 64, 55, 55]               0
         MaxPool2d-3           [-1, 64, 27, 27]               0
            Conv2d-4          [-1, 192, 27, 27]         307,392
              ReLU-5          [-1, 192, 27, 27]               0
         MaxPool2d-6          [-1, 192, 13, 13]               0
            Conv2d-7          [-1, 384, 13, 13]         663,936
              ReLU-8          [-1, 384, 13, 13]               0
            Conv2d-9          [-1, 256, 13, 13]         884,992
             ReLU-10          [-1, 256, 13, 13]               0
           Conv2d-11          [-1, 256, 13, 13]         590,080
             ReLU-12          [-1, 256, 13, 13]               0
        MaxPool2d-13            [-1, 256, 6, 6]               0
          Dropout-14                 [-1, 9216]               0
           Linear-15                 [-1, 4096]      37,752,832
             ReLU-16                 [-1, 4096]               0
          Dropout-17                 [-1, 4096]               0
           Linear-18                 [-1, 4096]      16,781,312
             ReLU-19                 [-1, 4096]               0
           Linear-20                 [-1, 1000]       4,097,000
================================================================
Total params: 61,100,840
Trainable params: 61,100,840
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 0.57
Forward/backward pass size (MB): 8.31
Params size (MB): 233.08
Estimated Total Size (MB): 241.96
----------------------------------------------------------------
